{"version":3,"sources":["assets/images/logo.svg","assets/images/background.svg","styles/global.ts","pages/Dashboard/styles.ts","services/api.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","backgroundImage","Header","styled","header","Title","h1","Form","form","props","hasError","css","shade","Repositories","div","Error","span","api","axios","create","baseURL","Dashboard","useState","storageRepositories","localStorage","getItem","JSON","parse","repositories","setRepositories","newRepo","setNewRepo","inputError","setInputError","event","a","preventDefault","get","response","repository","data","useEffect","setItem","stringify","src","logoImage","alt","type","onClick","clear","disabled","length","size","onSubmit","value","onChange","e","target","placeholder","map","key","full_name","to","owner","avatar_url","login","description","RepositoryInfo","section","Issues","SkeletonLoaderContainer","Repository","params","useRouteMatch","setRepository","issues","setIssues","then","stargazers_count","forks_count","open_issues_count","issue","href","html_url","id","title","user","width","height","background","Routes","path","component","exact","App","basename","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4af61211.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.0b819d63.svg\";","import { createGlobalStyle } from 'styled-components';\nimport backgroundImage from '../assets/images/background.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #f0f0f5 url(${backgroundImage}) no-repeat 70% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto,sans-serif;\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: 700px;\n\n  button {\n    display: flex;\n    align-items: center;\n    padding: 16px 24px;\n    border: 0;\n    background: transparent;\n    transition: background-color 0.3s;\n    color: #c53030;\n    border-radius: 8px;\n\n    &:hover {\n      background: rgba(197, 48, 48, 0.08);\n    }\n\n    &:disabled {\n      color: #747474 !important;\n\n      &:hover {\n        background: transparent;\n      }\n    }\n\n    svg {\n      margin-right: 8px;\n    }\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #3a3a3a;\n  max-width: 450px;\n  line-height: 56px;\n\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 700px;\n  display: flex;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 0;\n    border-radius: 5px 0 0px 5px;\n    color: #3a3a3a;\n    border: 2px solid transparent;\n    border-right: 0;\n    transition: border-color 0.3s;\n\n    ${props =>\n    props.hasError &&\n    css`\n        border-color: #c53030;\n      `}\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n\n  button {\n    width: 210px;\n    height: 70px;\n    background: #04d361;\n    border-radius: 0 5px 5px 0;\n    border: 0;\n    color: #fff;\n    font-weight: bold;\n    transition: background-color 0.3s;\n\n    &:hover {\n      background: ${shade(0.1, '#04d361')};\n    }\n  }\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    transition: transform 0.3s;\n\n    &:hover {\n      transform: translateX(8px);\n    }\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 16px;\n      display: flex;\n      flex-direction: column;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n  margin-top: 8px;\n  font-size: 12px;\n  margin-left: 8px;\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import React, { useState, FormEvent, useEffect } from 'react';\n\nimport { FiChevronRight, FiTrash2 } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\n\nimport { Title, Form, Repositories, Error, Header } from './styles';\nimport logoImage from '../../assets/images/logo.svg';\n\nimport api from '../../services/api';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\nconst Dashboard: React.FC = () => {\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storageRepositories = localStorage.getItem(\n      '@githubexplorer:repositories',\n    );\n\n    if (storageRepositories) {\n      return JSON.parse(storageRepositories);\n    }\n\n    return [];\n  });\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@githubexplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n    if (!newRepo) {\n      setInputError('Please, inform the owner/repository name!');\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Error searching for repository!');\n    }\n  }\n\n  function handleClearStorage() {\n    localStorage.clear();\n    setRepositories([]);\n  }\n\n  return (\n    <>\n      <Header>\n        <img src={logoImage} alt=\"github explorer logo\" />\n        <button\n          type=\"button\"\n          onClick={handleClearStorage}\n          disabled={repositories.length === 0}\n        >\n          <FiTrash2 size={18} />\n          Clear cache\n        </button>\n      </Header>\n      <Title>Explore github repositories!</Title>\n\n      <Form onSubmit={handleAddRepository} hasError={!!inputError}>\n        <input\n          value={newRepo}\n          onChange={e => setNewRepo(e.target.value)}\n          placeholder=\"owner/repository (example: facebook/react-native)\"\n        />\n        <button type=\"submit\">Search Repository</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map(repository => (\n          <Link\n            key={repository.full_name}\n            to={`/repository/${repository.full_name}`}\n          >\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n\n            <FiChevronRight size={24} />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  div {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n\n    a {\n      text-decoration: none;\n      display: flex;\n      align-items: center;\n      color: #a8a8b3;\n      transition: color 0.3s;\n      margin-right: 16px;\n\n      &:hover {\n        color: #666;\n      }\n\n      svg {\n        margin-right: 8px;\n      }\n    }\n  }\n`;\n\nexport const RepositoryInfo = styled.section`\n  display: flex;\n  flex-direction: column;\n  margin-top: 80px;\n\n  header {\n    display: flex;\n    align-items: center;\n\n    img {\n      width: 160px;\n      height: 160px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 24px;\n\n      strong {\n        font-size: 36px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #737380;\n        margin-top: 8px;\n      }\n    }\n  }\n\n  ul {\n    display: flex;\n    list-style: none;\n    margin-top: 40px;\n\n    li {\n      & + li {\n        margin-left: 80px;\n      }\n      strong {\n        display: block;\n        font-size: 36px;\n        color: #3d3d4d;\n      }\n\n      span {\n        display: block;\n        margin-top: 8px;\n        color: #737380;\n      }\n    }\n  }\n`;\n\nexport const Issues = styled.div`\n  margin-top: 80px;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    transition: transform 0.3s;\n\n    &:hover {\n      transform: translateX(8px);\n    }\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    div {\n      margin-left: 16px;\n      display: flex;\n      flex-direction: column;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n\nexport const SkeletonLoaderContainer = styled.div`\n  margin-top: 80px;\n\n  * {\n    margin-bottom: 16px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport SkeletonLoader from 'tiny-skeleton-loader-react';\n\nimport logoImage from '../../assets/images/logo.svg';\nimport {\n  Header,\n  RepositoryInfo,\n  Issues,\n  SkeletonLoaderContainer,\n} from './styles';\nimport api from '../../services/api';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n}\n\ninterface Issue {\n  title: string;\n  html_url: string;\n  id: number;\n  user: {\n    login: string;\n  };\n}\n\nconst Repository: React.FC = () => {\n  const { params } = useRouteMatch<RepositoryParams>();\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then(response => {\n      setRepository(response.data);\n    });\n\n    api.get(`repos/${params.repository}/issues`).then(response => {\n      setIssues(response.data);\n    });\n  }, [params.repository]);\n  return (\n    <>\n      <Header>\n        <img src={logoImage} alt=\"github explorer logo\" />\n        <div>\n          <Link to=\"/\">\n            <FiChevronLeft size={16} />\n            Back to home\n          </Link>\n        </div>\n      </Header>\n      {repository && (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n          <ul>\n            <li>\n              <strong>{repository.stargazers_count}</strong>\n              <span>Stars</span>\n            </li>\n            <li>\n              <strong>{repository.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{repository.open_issues_count}</strong>\n              <span>Issues Abertas</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n      {issues.length > 0 ? (\n        <Issues>\n          {issues.map(issue => (\n            <a target=\"blank\" href={issue.html_url} key={issue.id}>\n              <div>\n                <strong>{issue.title}</strong>\n                <p>{issue.user.login}</p>\n              </div>\n              <FiChevronRight size={24} />\n            </a>\n          ))}\n        </Issues>\n      ) : (\n          <SkeletonLoaderContainer>\n            <SkeletonLoader width=\"100%\" height=\"88px\" background=\"#eaeaef\" />\n          </SkeletonLoaderContainer>\n        )}\n    </>\n  );\n};\n\nexport default Repository;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Dashboard from '../pages/Dashboard';\nimport Repository from '../pages/Repository';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" component={Dashboard} exact />\n    <Route path=\"/repository/:repository+\" component={Repository} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport GlobalStyle from './styles/global';\n\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}